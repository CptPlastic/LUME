name: 'Version Bump'

on:
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch  # 1.2.1 -> 1.2.2
          - minor  # 1.2.1 -> 1.3.0
          - major  # 1.2.1 -> 2.0.0
        default: 'patch'
      custom_version:
        description: 'Custom version (optional, overrides version_type)'
        required: false
        type: string

jobs:
  bump-version:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Get current version
        id: current_version
        run: |
          cd src/lume_desk
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "Current version: $CURRENT_VERSION"

      - name: Calculate new version
        id: new_version
        run: |
          cd src/lume_desk
          
          if [ -n "${{ github.event.inputs.custom_version }}" ]; then
            NEW_VERSION="${{ github.event.inputs.custom_version }}"
            echo "Using custom version: $NEW_VERSION"
          else
            # Install semver tool
            npm install -g semver
            
            CURRENT="${{ steps.current_version.outputs.current }}"
            TYPE="${{ github.event.inputs.version_type }}"
            NEW_VERSION=$(semver -i $TYPE $CURRENT)
            echo "Bumping $TYPE: $CURRENT -> $NEW_VERSION"
          fi
          
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "tag=v$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: Update package.json
        run: |
          cd src/lume_desk
          npm version ${{ steps.new_version.outputs.version }} --no-git-tag-version
          echo "Updated package.json to ${{ steps.new_version.outputs.version }}"

      - name: Update tauri.conf.json
        run: |
          cd src/lume_desk/src-tauri
          sed -i 's/"version": ".*"/"version": "${{ steps.new_version.outputs.version }}"/' tauri.conf.json
          echo "Updated tauri.conf.json to ${{ steps.new_version.outputs.version }}"

      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "chore: bump version to ${{ steps.new_version.outputs.version }}"
          git tag ${{ steps.new_version.outputs.tag }}

      - name: Push changes
        run: |
          git push origin main
          git push origin ${{ steps.new_version.outputs.tag }}

      - name: Summary
        run: |
          echo "## ðŸŽ‰ Version Bumped!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Previous:** ${{ steps.current_version.outputs.current }}" >> $GITHUB_STEP_SUMMARY
          echo "**New:** ${{ steps.new_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "**Tag:** ${{ steps.new_version.outputs.tag }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The tag has been pushed and will trigger the release workflow." >> $GITHUB_STEP_SUMMARY